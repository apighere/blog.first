{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{351:function(t,s,a){\"use strict\";a.r(s);var n=a(43),v=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"c基础\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#c基础\"}},[t._v(\"#\")]),t._v(\" C基础\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"文本编辑helloworld\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文本编辑helloworld\"}},[t._v(\"#\")]),t._v(\" 文本编辑Helloworld\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"建立helloworld.c的文本文件\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"键入文本\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[t._v(\"#inclide<stdio.h>\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello world\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"保存文本\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"调出cmd终端\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"在文件地址栏下键入“cmd”\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"cmd命令生成exe程序\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"键入dir查看目录\")]),t._v(\" \"),a(\"li\",[t._v(\"键入gcc helloworld.c -o helloworld.exe\")]),t._v(\" \"),a(\"li\",[t._v(\"键入helloworld.exe\\n\"),a(\"ul\",[a(\"li\",[t._v(\"输出结果\")])])])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"常见ide\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常见ide\"}},[t._v(\"#\")]),t._v(\" 常见ide\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"定义：我知道\")]),t._v(\" \"),a(\"li\",[t._v(\"常见的ide\\n\"),a(\"ul\",[a(\"li\",[t._v(\"window的vs系列\")]),t._v(\" \"),a(\"li\",[t._v(\"clion跨平台的ide\")]),t._v(\" \"),a(\"li\",[t._v(\"只支持windows的Dev C++\")]),t._v(\" \"),a(\"li\",[t._v(\"Qt Creator跨平台\")]),t._v(\" \"),a(\"li\",[t._v(\"Eclipse不能跨平台\")])])]),t._v(\" \"),a(\"li\",[t._v(\"MacOS\\n\"),a(\"ul\",[a(\"li\",[t._v(\"Xcode\")]),t._v(\" \"),a(\"li\",[t._v(\"Clion\")]),t._v(\" \"),a(\"li\",[t._v(\"Qt Creator\")]),t._v(\" \"),a(\"li\",[t._v(\"Eclipse\")])])]),t._v(\" \"),a(\"li\",[t._v(\"Linux\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"vs的使用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vs的使用\"}},[t._v(\"#\")]),t._v(\" VS的使用\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"打开VS点击“创建新项目“\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"筛选C++、windows、控制台\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"选择空项目\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"下一步\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"键入项目名称选择目录\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"勾选”将解决方案和项目放在同一个目录中“\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"创建\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"右键”源文件“--”添加“--”新建项“\")]),t._v(\" \"),a(\"li\",[t._v(\"【名称】需注意修改后缀名”.c“\")]),t._v(\" \"),a(\"li\",[t._v(\"添加\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"可以开始键入代码\")]),t._v(\" \"),a(\"p\",[t._v(\"#include<stdio.h>\")]),t._v(\" \"),a(\"p\",[t._v('int main(void)\\n{\\nprintf(\"hello world\\\\n\");\\nreturn 0;')]),t._v(\" \"),a(\"p\",[t._v(\"}\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"注释\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"#include<stdio.h>\")])]),t._v(\" \"),a(\"p\",[t._v(\"#：引入外部文件\\ninclude：指定包含文件包\\n<>尖括号：引入的是库文件\\nstdio.h：c程序的一个文件，head头，头文件\\nstd：标准，i：t输入，o：输出，标准输入输出\")]),t._v(\" \"),a(\"p\",[t._v(\"整个#include<stdio.h>服务于printf函数\")]),t._v(\" \"),a(\"p\",[t._v(\"类似于python的导入模块import\")]),t._v(\" \"),a(\"p\",[t._v(\"以下为main的函数体\\n\"),a(\"code\",[t._v(\"int main(void)\")])]),t._v(\" \"),a(\"p\",[t._v(\"int：表示main函数返回整数值，对应下面的return\\nmain：代码程序的入口\\n（void）：（）表示main的参数，void表示参数为空\\n\"),a(\"code\",[t._v(\"{\")])]),t._v(\" \"),a(\"p\",[t._v(\"main函数起始\\n\"),a(\"code\",[t._v('printf(\"hello world\\\\n\");')]),t._v(\"\\n在屏幕上打印“helloworld”\\n\"),a(\"code\",[t._v(\"return 0;\")]),t._v(\"\\nretuen：呼应前面的int，0是int的一种\\n\"),a(\"code\",[t._v(\"}\")])]),t._v(\" \"),a(\"p\",[t._v(\"main函数终止\")])])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"注释\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#注释\"}},[t._v(\"#\")]),t._v(\" 注释\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"注释的定义：我知道\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"注释的方法\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"单行注释：//双斜杠\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"多行注释：/* 内容*/\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"使用“条件编译”进行多行注释\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[t._v(\"#\"),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"if\")]),t._v(\" 0\")]),t._v(\"\\n内容\\n内容\\n内容\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[t._v(\"#\"),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"endif\")])]),t._v(\"\\n\")])])])])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"解决终端一闪而过的问题\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解决终端一闪而过的问题\"}},[t._v(\"#\")]),t._v(\" 解决终端一闪而过的问题\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"通过system（）函数解决，在程序的return 0；之前，添加如下函数\\n要插入头部文件\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"#include <stdlib.n>\\n\")])])]),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('system(\"pause\")\\n')])])]),a(\"p\",[t._v(\"​\\t\\t一般出现在非vs2019中\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"vs代码运行的4种模式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vs代码运行的4种模式\"}},[t._v(\"#\")]),t._v(\" VS代码运行的4种模式\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"Debug x86：以调试模式运行32位程序，带调试表\")]),t._v(\" \"),a(\"li\",[t._v(\"Debug x64：以调试模式运行64位程序，带调试表\")]),t._v(\" \"),a(\"li\",[t._v(\"Realease  x86：以发布模式运行32位程序，不带调试表\")]),t._v(\" \"),a(\"li\",[t._v(\"Realease  x86：以发布模式运行64位程序，不带调试表\")])]),t._v(\" \"),a(\"p\",[t._v(\"system函数和Sleep函数\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"main的两种标准形式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#main的两种标准形式\"}},[t._v(\"#\")]),t._v(\" main的两种标准形式\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"不带参数的\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"int main(void)\\n{\\n\\t内容\\n\\treturn 0;\\n}\\n\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"带参数的\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"int main(int argc,char* argv[])\\n{\\n\\t内容\\n\\truturn 0;\\n}\\n\")])])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"gcc编译4步骤\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gcc编译4步骤\"}},[t._v(\"#\")]),t._v(\" gcc编译4步骤\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"预处理器预处理\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#预处理器预处理\"}},[t._v(\"#\")]),t._v(\" 预处理器预处理\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"通过-E参数：gcc -E hello.c -o hello.i\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"生成.i预处理文件\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"完成的工做\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"展开头文件\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"头文件展开不检查语法错误，可以展开任意文件\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"宏定义替换\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"//宏定义语法：#define 宏名 宏值\\n#define PI 3.14\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"将宏名赋值宏值\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"替换注释\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"将注释替换为空行或空格\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"展开条件编译\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"根据条件展开函数里的编译的指令\")])])])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"编译器编译\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编译器编译\"}},[t._v(\"#\")]),t._v(\" 编译器编译\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"通过-S参数：gcc -S hello.i -o hello.s\")]),t._v(\" \"),a(\"li\",[t._v(\"生成.s汇编文件\")]),t._v(\" \"),a(\"li\",[t._v(\"完成的工做\\n\"),a(\"ol\",[a(\"li\",[t._v(\"逐行检查语法错误，并给出参考建议(耗时最长)\")]),t._v(\" \"),a(\"li\",[t._v(\"将无错误的预处理文件转化为汇编语言写的汇编文件\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"汇编器汇编\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#汇编器汇编\"}},[t._v(\"#\")]),t._v(\" 汇编器汇编\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"通过-c参数：gcc -c hello.i -s hello.o\")]),t._v(\" \"),a(\"li\",[t._v(\"生成.o目标文件\")]),t._v(\" \"),a(\"li\",[t._v(\"完成的工做\\n\"),a(\"ol\",[a(\"li\",[t._v(\"将汇编指令的.s文件翻译成二进制文件\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"链接器链接\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#链接器链接\"}},[t._v(\"#\")]),t._v(\" 链接器链接\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"无参数：gcc hello.o -o hello.exe\")]),t._v(\" \"),a(\"li\",[t._v(\"生成.exe执行文件\")]),t._v(\" \"),a(\"li\",[t._v(\"完成的工做\\n\"),a(\"ol\",[a(\"li\",[t._v(\"库引入\")]),t._v(\" \"),a(\"li\",[t._v(\"合并多目标文件（多个.c合并成所需的.exe）\")]),t._v(\" \"),a(\"li\",[t._v(\"合并启动例程--启动例程：负责调用main函数\")])])])]),t._v(\" \"),a(\"p\",[t._v(\"另：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"-o是重命名的意思\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"可以跳过步骤，比如不-E、-S直接-c；比如直跳四步gcc hello.c -o hello.exe\")])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"printf格式化输出int\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#printf格式化输出int\"}},[t._v(\"#\")]),t._v(\" printf格式化输出int\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"代码如下\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[t._v(\"#\"),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"<stdio.h>\")])]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[t._v(\"#\"),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"<stdlib.h>\")])]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//赋值\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"%d\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//%d是占位符，表示那个位置输出的是整数\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"%d - %d = %d\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//占位符对应位置，算数逻辑会运算\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"system\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"pause\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"注，int整型若浮点数赋值，则只取整数部分\")]),t._v(\" \"),a(\"p\",[t._v(\"​\")])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"程序调试\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#程序调试\"}},[t._v(\"#\")]),t._v(\" 程序调试\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"代码如下\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-c extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token macro property\"}},[t._v(\"#\"),a(\"span\",{pre:!0,attrs:{class:\"token directive keyword\"}},[t._v(\"include\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"<stdio.h>\")])]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//自定义一个普通函数\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"testFun\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello 1\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello 2\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"hello 3\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"牛逼兄弟\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"testFun\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"调试的前提：程序没有语法错误\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"调试的核心：让程序一行一行地执行\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"调试的一般步骤：\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"添加、取消断点（f9），可添加多个\")]),t._v(\" \"),a(\"li\",[t._v(\"再Debug模式下，F5启动调试\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"调试的按键：\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"逐语句（f11），遇见自定义函数，进入函数内，逐条跟踪执行\")]),t._v(\" \"),a(\"li\",[t._v(\"逐过程（f10），遇见自定义函数，不进入函数\")]),t._v(\" \"),a(\"li\",[t._v(\"逐断点（shift+f11），直接跳转至下一个断点，也可以跳出函数\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"额外内容\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"ctrl+f7：编译但不运行，没有语法错误就能生成一个.exe\")])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"变量\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量\"}},[t._v(\"#\")]),t._v(\" 变量\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"变量三要素：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"变量类型：决定内存空间大小\")]),t._v(\" \"),a(\"li\",[t._v(\"变量名：对应内存空间的位置\")]),t._v(\" \"),a(\"li\",[t._v(\"变量值：表示内存空间内存储的数据\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"变量定义语法：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"类型名  变量名 = 变量值;  int  a = 10\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"变量的声明：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"作用：让编译器知道，将来会有这样一块内存需要开辟\")]),t._v(\" \"),a(\"li\",[t._v(\"语法1： 类型名 变量名 ;   int a\")]),t._v(\" \"),a(\"li\",[t._v(\"语法2： extern 类型名 变量名 ;    extern int a\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"定义和声明的区别：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"变量定义会开辟内存空间\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"变量声明不开辟内存空间\")])])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"常量\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常量\"}},[t._v(\"#\")]),t._v(\" 常量\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"不会变化的数据 ，不能修改\")]),t._v(\" \"),a(\"li\",[t._v(\"示例：\\n\"),a(\"ol\",[a(\"li\",[t._v(\"#define  PI  3.1415\\n\"),a(\"ul\",[a(\"li\",[t._v(\"没有分号结束标记\")]),t._v(\" \"),a(\"li\",[t._v(\"没有类型描述符\")])])]),t._v(\" \"),a(\"li\",[t._v(\"“hello” 字符串常量、‘A’ 字符常量、-10整型常量、3.141浮点型常量\")]),t._v(\" \"),a(\"li\",[t._v(\"const int a = 10\\n\"),a(\"ul\",[a(\"li\",[t._v(\"const关键字，限制 a 变量为只读\")]),t._v(\" \"),a(\"li\",[t._v(\"可以用指针修改a的值\")])])])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"标识符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#标识符\"}},[t._v(\"#\")]),t._v(\" 标识符\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"标识符：变量和常量的统称\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"要求：\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"不能是关键字、库函数名：return、void、extern、system、int等\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"只能有 数字、字母、下划线“_”组成\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"不能以数字字符开头\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"区分大小写\")])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"建议：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"建议使用大写字符命名 “常量”，小写和“_” 命名 “变量”\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"遵循规范命名法\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"大驼峰法：首字母大写，后每个单词首字母大写\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"小驼峰法：首字母小写，后每个单词首字母大写\")])])])])])])])])}),[],!1,null,null,null);s.default=v.exports}}]);","extractedComments":[]}